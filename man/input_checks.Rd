% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input_checks.R
\name{input_checks}
\alias{input_checks}
\title{Check input to Blockbuster function is valid.}
\usage{
input_checks(element.data = NULL, block.data = NULL,
  forecast.horizon = NULL, rebuild.money = NULL, repair.money = NULL,
  block.rebuild.cost = NULL, inflation = NULL)
}
\arguments{
\item{element.data}{An element-level data frame.}

\item{block.data}{A block-level data frame.}

\item{forecast.horizon}{An integer.}

\item{rebuild.money}{A numeric vector}

\item{repair.money}{A numeric vector}

\item{block.rebuild.cost}{A number}

\item{inflation}{A numeric vector}
}
\value{
The input is returned as is, with the addition of a block-level data
frame if \code{block.data = NULL}.
}
\description{
This function contains all the input validity checks used by the
\code{\link{Blockbuster}} function.  It produces messages and warnings about
common scenarios, and errors for invalid data inputs. Currently this function
will only report the first error that occurs.
}
\details{
If \code{block.data} is not provided, this function will generate
the block-level data.frame.

\code{forecast.horizon} must be a single positive number.

\code{inflation}, \code{rebuild.money} and \code{repair.money} must be
numeric.  If either is  a single number then a message is displayed stating
that it will be used for each year. If vectors are passed to these arguments,
their length must be equal or greater than \code{forecast.horizon}, with the
additional values being ignored and a message displayed.  Negative values
will throw an error. A message is displayed if \code{inflation} seems
excessive (over 200%).

\code{block.rebuild.cost} is checked to be a positive number.  If a vector is
passed, the values beyond the first will be ignored and a message displayed.
}
\examples{
# run input checks on a 10 year simulation with no rebuilding, £1M repair
# budget each year with £2,000 unit rebuild cost and no inflation. The block-
# level data frame is not supplied and will be generated.
blockbuster2:::input_checks(element.data = simulated_elements,
               block.data = NULL,
               forecast.horizon = 10,
               rebuild.money = 0,
               repair.money = 1000000,
               block.rebuild.cost = 2000,
               inflation = 1)
}
